--DROP PROCEDURE SP_CRIAR_ASSIDUIDADE 
--USE ogmocedesenv
ALTER PROCEDURE SP_CRIAR_ASSIDUIDADE @P_DATA DATE , @P_DATAFIM DATE, @P_MATRICULA INT
AS

BEGIN

	SET NOCOUNT ON;

	DECLARE @P_PAREDE INT;
	DECLARE @P_VAGAS INT;
	DECLARE @P_CAMBIO INT;
	DECLARE @P_NUMERO INT;
	DECLARE @P_AGULHADA INT;
	DECLARE @MATRICULA INT;
	DECLARE @P_FEZ11H INT;
	DECLARE @P_PERIODOANT1 INT;
	DECLARE @P_PERIODOANT2 INT;
	DECLARE @P_DATAANT DATE, @P_DATAANT2 DATE;
	
	DECLARE @P_PAREDE_ATUAL INT = 0;
	
	DECLARE @P_COUNT_CAMBIOS INT = 0;
	DECLARE @P_COUNT_SEMAGULHADA INT = 0;
	DECLARE @P_COUNT_TEMREQ INT = 0;
	DECLARE @P_COUNT_NAOTEMREQ INT = 0;
	DECLARE @P_COUNT_NAOFEZ11H INT = 0;
	DECLARE @P_COUNT_TEMOCORRENCIA INT = 0;
	DECLARE @P_COUNT_BLOQUEADO INT = 0;
	DECLARE @DATAAUX DATE = @P_DATA;
	
	IF @P_DATA <= @P_DATAFIM 
	BEGIN
		
		CREATE TABLE #TEMP_OCORRENCIA (
			MATRICULA INT,
			DESCRICAO VARCHAR(MAX)
		);
		
		CREATE TABLE #TEMP_ENGAJADO11H(
			MATRICULA INT
		);
		
		CREATE TABLE #TEMP_CAMBIOS(
			CAMBIO INT,
			VAGAS INT
		);		
		
		CREATE TABLE #TEMP_REQ(
			MATRICULA INT,
			REQUISICAO INT,
			TRABALTURA INT
		);	
		
		CREATE TABLE #TEMP_BLOQUEIO(
			MATRICULA INT
		);
		
		PRINT @MATRICULA;
		WHILE @P_DATA <= @P_DATAFIM
		BEGIN
			DELETE FROM #TEMP_OCORRENCIA;
										
			IF @P_MATRICULA IS NULL BEGIN
				INSERT INTO #TEMP_OCORRENCIA(MATRICULA, DESCRICAO) 
					SELECT O.MATRICULA, O.DESCRICAO FROM OCORRENCIA O 
							WHERE ((@P_DATA BETWEEN O.INICIO AND O.TERMINO )
							 OR (@P_DATA >= O.INICIO AND O.TERMINO IS NULL))
							AND O.TRAVATPA = 1;	
						
				INSERT INTO ASSIDUIDADE(MATRICULA, DATA, PAREDE) SELECT MATRICULA, @P_DATA, 1 FROM TRABALHADOR 
					WHERE EFETIVO = 1 AND EXCLUIDO = 0 AND MATRICULA NOT IN (SELECT MATRICULA FROM ASSIDUIDADE WHERE DATA = @P_DATA AND PAREDE = 1);
				INSERT INTO ASSIDUIDADE(MATRICULA, DATA, PAREDE) SELECT MATRICULA, @P_DATA, 2 FROM TRABALHADOR
					WHERE EFETIVO = 1 AND EXCLUIDO = 0 AND MATRICULA NOT IN (SELECT MATRICULA FROM ASSIDUIDADE WHERE DATA = @P_DATA AND PAREDE = 2);
				INSERT INTO ASSIDUIDADE(MATRICULA, DATA, PAREDE) SELECT MATRICULA, @P_DATA, 3 FROM TRABALHADOR
					WHERE EFETIVO = 1 AND EXCLUIDO = 0 AND MATRICULA NOT IN (SELECT MATRICULA FROM ASSIDUIDADE WHERE DATA = @P_DATA AND PAREDE = 3);
				INSERT INTO ASSIDUIDADE(MATRICULA, DATA, PAREDE) SELECT MATRICULA, @P_DATA, 4 FROM TRABALHADOR
					WHERE EFETIVO = 1 AND EXCLUIDO = 0 AND MATRICULA NOT IN (SELECT MATRICULA FROM ASSIDUIDADE WHERE DATA = @P_DATA AND PAREDE = 4);
					
				DECLARE C_ASSIDUIDADE CURSOR READ_ONLY FORWARD_ONLY FOR
					SELECT MATRICULA, PAREDE FROM ASSIDUIDADE WHERE DATA = @P_DATA ORDER BY DATA, PAREDE;
			END 
			ELSE BEGIN
				INSERT INTO #TEMP_OCORRENCIA(MATRICULA, DESCRICAO) 
					SELECT O.MATRICULA, O.DESCRICAO FROM OCORRENCIA O 
							WHERE ((@P_DATA BETWEEN O.INICIO AND O.TERMINO )
							 OR (@P_DATA >= O.INICIO AND O.TERMINO IS NULL))
							AND O.TRAVATPA = 1 AND O.MATRICULA = @P_MATRICULA;
								
				DELETE FROM ASSIDUIDADE WHERE DATA = @P_DATA AND MATRICULA = @P_MATRICULA;
				
				INSERT INTO ASSIDUIDADE(MATRICULA, DATA, PAREDE) SELECT MATRICULA, @P_DATA, 1 FROM TRABALHADOR 
					WHERE EFETIVO = 1 AND EXCLUIDO = 0 AND MATRICULA = @P_MATRICULA;
				INSERT INTO ASSIDUIDADE(MATRICULA, DATA, PAREDE) SELECT MATRICULA, @P_DATA, 2 FROM TRABALHADOR
					WHERE EFETIVO = 1 AND EXCLUIDO = 0 AND MATRICULA = @P_MATRICULA;
				INSERT INTO ASSIDUIDADE(MATRICULA, DATA, PAREDE) SELECT MATRICULA, @P_DATA, 3 FROM TRABALHADOR
					WHERE EFETIVO = 1 AND EXCLUIDO = 0 AND MATRICULA = @P_MATRICULA;
				INSERT INTO ASSIDUIDADE(MATRICULA, DATA, PAREDE) SELECT MATRICULA, @P_DATA, 4 FROM TRABALHADOR
					WHERE EFETIVO = 1 AND EXCLUIDO = 0 AND MATRICULA = @P_MATRICULA;
					
				DECLARE C_ASSIDUIDADE CURSOR READ_ONLY FORWARD_ONLY FOR
					SELECT MATRICULA, PAREDE FROM ASSIDUIDADE WHERE DATA = @P_DATA AND MATRICULA = @P_MATRICULA ORDER BY DATA, PAREDE;
			END;
			
			OPEN C_ASSIDUIDADE;
			FETCH NEXT FROM C_ASSIDUIDADE INTO @MATRICULA, @P_PAREDE;
			
			DELETE FROM #TEMP_BLOQUEIO;
			INSERT INTO #TEMP_BLOQUEIO(MATRICULA)
				SELECT B.MATRICULA FROM BLOQUEADO B
					WHERE (@P_DATA BETWEEN B.INICIO AND B.TERMINO) AND B.CARGA IN (
					SELECT RC.CARGA FROM REQCARGA RC  
					INNER JOIN (
						SELECT R.REQUISICAO
						FROM REQUISICAO R
						JOIN REQFUNCAO RF ON RF.REQUISICAO = R.REQUISICAO
						WHERE (R.DIA = @P_DATA )
						  AND R.CANCELADO = 0
						  AND RF.VISUALIZAQUADRO = 1
					) R ON R.REQUISICAO = RC.REQUISICAO
					GROUP BY RC.CARGA);
			
			WHILE @@FETCH_STATUS = 0
			BEGIN
				IF @P_PAREDE_ATUAL <> @P_PAREDE BEGIN
					PRINT '================================================================';
					PRINT 'PAREDE : ' + CONVERT(VARCHAR, @P_PAREDE)
					PRINT @P_DATA;
					
					SET @P_PAREDE_ATUAL = @P_PAREDE 
					
					SET @P_DATAANT = @P_DATA;
					SET @P_DATAANT2 = @P_DATA;
					
					SET @P_PERIODOANT1 = @P_PAREDE - 1;
					SET @P_PERIODOANT2 = @P_PAREDE - 2;
					
					IF @P_PERIODOANT1 <= 0 BEGIN
						SET @P_PERIODOANT1 = @P_PERIODOANT1 + 4;
						SET @P_DATAANT = DATEADD(DAY, -1, @P_DATA);
					END;
					
					IF @P_PERIODOANT2 <= 0 BEGIN
						SET @P_PERIODOANT2 = @P_PERIODOANT2 + 4;
						SET @P_DATAANT2 = DATEADD(DAY, -1, @P_DATA);
					END;
					
					DELETE FROM #TEMP_ENGAJADO11H;
					INSERT INTO #TEMP_ENGAJADO11H(MATRICULA)  
						SELECT RF.MATRICULA
						FROM REQUISICAO R
						JOIN REQFUNCAO RF ON RF.REQUISICAO = R.REQUISICAO
						WHERE ((R.DIA = @P_DATAANT AND R.PERIODO = @P_PERIODOANT1) OR (R.DIA = @P_DATAANT2 AND R.PERIODO = @P_PERIODOANT2))
						  AND R.CANCELADO = 0
						  AND RF.VISUALIZAQUADRO = 1;
						  
						  
					DELETE FROM #TEMP_CAMBIOS;
					INSERT INTO #TEMP_CAMBIOS
						SELECT F.CAMBIO, COUNT(*)
						FROM REQUISICAO R
						JOIN REQFUNCAO RF ON RF.REQUISICAO = R.REQUISICAO
						JOIN FUNCAO F ON F.FUNCAO = RF.FUNCAO
						WHERE R.DIA = @P_DATA 
						  AND R.PERIODO = @P_PAREDE
						  AND R.CANCELADO =0
						  AND RF.VISUALIZAQUADRO = 1
						  AND F.CATEGORIA IN (24,28,43)
						GROUP BY F.CAMBIO;
						
					DELETE FROM #TEMP_REQ;
					INSERT INTO #TEMP_REQ(MATRICULA, REQUISICAO, TRABALTURA) 
						SELECT RF.MATRICULA, R.REQUISICAO, R.TRABALTURA
						FROM REQUISICAO R
						JOIN REQFUNCAO RF ON RF.REQUISICAO = R.REQUISICAO
						WHERE (R.DIA = @P_DATA AND R.PERIODO = @P_PAREDE)
						  AND R.CANCELADO = 0
						  AND RF.VISUALIZAQUADRO = 1;	  
				END;
								
				DECLARE C_CAMBIOS CURSOR READ_ONLY FORWARD_ONLY FOR
					SELECT CAMBIO, VAGAS FROM #TEMP_CAMBIOS;
					
				OPEN C_CAMBIOS;
				FETCH NEXT FROM C_CAMBIOS INTO @P_CAMBIO, @P_VAGAS;
				
				SET @P_COUNT_CAMBIOS  = 0;
				SET @P_COUNT_SEMAGULHADA  = 0;
				SET @P_COUNT_TEMREQ  = 0;
				SET @P_COUNT_NAOTEMREQ  = 0;
				SET @P_COUNT_NAOFEZ11H  = 0;
				SET @P_COUNT_TEMOCORRENCIA  = 0;
				SET @P_COUNT_BLOQUEADO = 0;
				
				WHILE @@FETCH_STATUS = 0
				BEGIN					
					SET @P_COUNT_CAMBIOS = @P_COUNT_CAMBIOS + 1;
					SET @P_NUMERO = (SELECT TOP 1 NUMERO FROM AGULHADO WHERE DATA = @P_DATA AND PAREDE = @P_PAREDE AND CAMBIO = @P_CAMBIO AND CHAMADA = 1);
					SET @P_AGULHADA = (SELECT COUNT(*) FROM 
						(SELECT  ROW_NUMBER() OVER (ORDER BY NUMERO) AS VAGA, MATRICULA, NUMERO FROM CAMBIOS 
							WHERE CAMBIO = @P_CAMBIO AND CHAMADA = 1 AND NUMERO >= @P_NUMERO ) AS TABELA WHERE VAGA BETWEEN 1 AND @P_VAGAS AND MATRICULA = @MATRICULA);
					
					SET @P_FEZ11H = (SELECT COUNT(*)
						FROM #TEMP_ENGAJADO11H
						WHERE MATRICULA = @MATRICULA);
					
					DECLARE @P_OCORRENCIA_DCR VARCHAR(MAX);
					SET @P_OCORRENCIA_DCR = (SELECT TOP 1 O.DESCRICAO FROM #TEMP_OCORRENCIA O 
						WHERE O.MATRICULA = @MATRICULA);
					
					DECLARE @P_REQUISICAO INT;
					SET @P_REQUISICAO = (SELECT COUNT(*)
						FROM #TEMP_REQ
						WHERE MATRICULA = @MATRICULA);
					
					DECLARE @P_BLOQUEADO INT;
					SET @P_BLOQUEADO = (SELECT COUNT(*)
						FROM #TEMP_BLOQUEIO
						WHERE MATRICULA = @MATRICULA);
					
					
					IF @P_OCORRENCIA_DCR <> ''  
						SET @P_COUNT_TEMOCORRENCIA = @P_COUNT_TEMOCORRENCIA + 1;
					IF @P_FEZ11H = 0
						SET @P_COUNT_NAOFEZ11H =  @P_COUNT_NAOFEZ11H + 1;
					IF @P_BLOQUEADO > 0
						SET @P_COUNT_BLOQUEADO = @P_COUNT_BLOQUEADO + 1;
					IF @P_REQUISICAO = 0
						SET @P_COUNT_NAOTEMREQ =  @P_COUNT_NAOTEMREQ + 1;
					IF @P_REQUISICAO > 0
						SET @P_COUNT_TEMREQ = @P_COUNT_TEMREQ + 1;
					IF @P_AGULHADA = 0 
						SET @P_COUNT_SEMAGULHADA = @P_COUNT_SEMAGULHADA + 1;
					
					FETCH NEXT FROM C_CAMBIOS INTO @P_CAMBIO, @P_VAGAS;	
					
				END;
				CLOSE C_CAMBIOS;
				DEALLOCATE C_CAMBIOS;
				
				PRINT '>>>>>>>>>'
				PRINT '@P_COUNT_TEMOCORRENCIA : ' + CONVERT(VARCHAR, @P_COUNT_TEMOCORRENCIA)
				PRINT '@P_COUNT_NAOFEZ11H : ' + CONVERT(VARCHAR, @P_COUNT_NAOFEZ11H)
				PRINT '@P_COUNT_BLOQUEADO : ' + CONVERT(VARCHAR, @P_COUNT_BLOQUEADO)
				PRINT '@P_COUNT_TEMREQ : ' + CONVERT(VARCHAR, @P_COUNT_TEMREQ)
				PRINT '@P_COUNT_NAOTEMREQ : ' + CONVERT(VARCHAR, @P_COUNT_NAOTEMREQ)						
				PRINT '>>>>>>>>>'	
				PRINT '+++++++++++++++++++++++++++++++++++++++++++++++'
				IF @P_COUNT_TEMOCORRENCIA > 0
					UPDATE ASSIDUIDADE SET SITUACAO = 1, OBSERVACAO = 'TEM OCORRÊNCIA : ' + @P_OCORRENCIA_DCR WHERE MATRICULA = @MATRICULA AND PAREDE = @P_PAREDE AND DATA = @P_DATA;
				ELSE IF @P_COUNT_NAOFEZ11H > 0 AND @P_COUNT_TEMREQ > 0
					UPDATE ASSIDUIDADE SET OBSERVACAO = 'NÃO FEZ 11H E EMBARCOU', SITUACAO = 0 WHERE MATRICULA = @MATRICULA AND PAREDE = @P_PAREDE AND DATA = @P_DATA;
				ELSE IF @P_COUNT_NAOFEZ11H > 0
					UPDATE ASSIDUIDADE SET OBSERVACAO = 'NÃO FEZ 11H' WHERE MATRICULA = @MATRICULA AND PAREDE = @P_PAREDE AND DATA = @P_DATA;
				ELSE IF @P_COUNT_TEMREQ > 0 AND @P_COUNT_BLOQUEADO > 0
					UPDATE ASSIDUIDADE SET OBSERVACAO = 'ESTÁ BLOQUEADO E NÃO PODERIA TER EMBARCADO', SITUACAO = 0 WHERE MATRICULA = @MATRICULA AND PAREDE = @P_PAREDE AND DATA = @P_DATA;
				ELSE IF @P_COUNT_BLOQUEADO > 0
					UPDATE ASSIDUIDADE SET OBSERVACAO = 'ESTÁ BLOQUEADO', SITUACAO = 1 WHERE MATRICULA = @MATRICULA AND PAREDE = @P_PAREDE AND DATA = @P_DATA;
				ELSE IF @P_COUNT_TEMREQ > 0
					UPDATE ASSIDUIDADE SET OBSERVACAO = 'OK', SITUACAO = 1 WHERE MATRICULA = @MATRICULA AND PAREDE = @P_PAREDE AND DATA = @P_DATA;
				ELSE IF @P_COUNT_NAOTEMREQ > 0 AND @P_COUNT_SEMAGULHADA > 0
					UPDATE ASSIDUIDADE SET OBSERVACAO = 'DISPONIVEL', SITUACAO = 0 WHERE MATRICULA = @MATRICULA AND PAREDE = @P_PAREDE AND DATA = @P_DATA;
				ELSE IF @P_COUNT_NAOTEMREQ > 0 AND @P_COUNT_SEMAGULHADA = 0
					UPDATE ASSIDUIDADE SET OBSERVACAO = 'TEM FREQUENCIA, MAS NÃO ESTAVA NA CHAMADA', SITUACAO = 0 WHERE MATRICULA = @MATRICULA AND PAREDE = @P_PAREDE AND DATA = @P_DATA;
				ELSE IF @P_COUNT_SEMAGULHADA > 0
					UPDATE ASSIDUIDADE SET OBSERVACAO = 'NÃO ERA A VEZ NA RODA' WHERE MATRICULA = @MATRICULA AND PAREDE = @P_PAREDE AND DATA = @P_DATA;
				ELSE
					UPDATE ASSIDUIDADE SET OBSERVACAO = 'NÃO COMPARECEU E SEM OBRIGAÇÕES' WHERE MATRICULA = @MATRICULA AND PAREDE = @P_PAREDE AND DATA = @P_DATA;
									
				FETCH NEXT FROM C_ASSIDUIDADE INTO @MATRICULA, @P_PAREDE;
			END;
			CLOSE C_ASSIDUIDADE;
			DEALLOCATE C_ASSIDUIDADE;
			
			SET @P_DATA = DATEADD(DAY, 1, @P_DATA);
		END;
		SET @P_DATA = @DATAAUX;			
		
	END;
	
	DROP TABLE #TEMP_ENGAJADO11H;
	DROP TABLE #TEMP_OCORRENCIA;
	DROP TABLE #TEMP_CAMBIOS;
	DROP TABLE #TEMP_REQ;
	DROP TABLE #TEMP_BLOQUEIO;
	
END;